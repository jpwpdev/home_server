server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name 10.0.0.64;

    ssl_certificate /home_server/server/server.cert;
    ssl_certificate_key /home_server/server/server.key;

    location = /home-wiki {
        return 301 $scheme://$host/home-wiki/;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;  # Adjust to match your PHP version
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    # DokuWiki
    location /home-wiki/ {
        alias /home_server/dokuwiki/;
        # index index.php index.html index.htm;
        index doku.php;

        location ~ ^/home-wiki/(data|conf|bin|inc)/ {
            return 403;
        }

        location ~ \.php$ {
            include snippets/fastcgi-php.conf;
            fastcgi_pass unix:/var/run/php/php8.2-fpm.sock; # Ensure this matches your PHP version
            fastcgi_param SCRIPT_FILENAME $request_filename; # Adjust if needed
            include fastcgi_params;
        }

        # location ~ ^/home-wiki/(.+\.php)$ {
        #     try_files $uri $uri/ /home-wiki/index.php;
        #     include snippets/fastcgi-php.conf;
        #     fastcgi_pass unix:/var/run/php/php8.2-fpm.sock; # Adjust for your PHP version
        #     fastcgi_param SCRIPT_FILENAME $request_filename;
        # }
        location ~ ^/home-wiki/(.+\.php)$ {
            include snippets/fastcgi-php.conf;
            fastcgi_pass unix:/var/run/php/php8.2-fpm.sock; # Adjust for your PHP version
            fastcgi_param SCRIPT_FILENAME /home_server/dokuwiki$fastcgi_script_name;
            include fastcgi_params;
        }

        location ~* ^/home-wiki/(.+\.jpg|jpeg|gif|png|ico|css|js|svg)$ {
            try_files $uri $uri/ /wiki/index.php;
        }
    }

    # Node.js App
    location / {
        proxy_pass https://10.0.0.64:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

}

server {
    listen 80;
    listen [::]:80;
    server_name 10.0.0.64;
    return 301 https://$host$request_uri;
}
